import Connector, {
  SendPaymentArgs,
  SendPaymentResponse,
  CheckPaymentArgs,
  CheckPaymentResponse,
  GetInfoResponse,
  GetBalanceResponse,
  MakeInvoiceArgs,
  MakeInvoiceResponse,
  SignMessageArgs,
  SignMessageResponse,
  VerifyMessageArgs,
  VerifyMessageResponse,
} from "./connector.interface";

interface Config {}

class ConnectorExample implements Connector {
  config: Config;

  constructor(config: Config) {
    this.config = config;
  }

  init() {
    // add your own implementation or return Promise.resolve();
  }

  unload() {
    // add your own implementation or return Promise.resolve();
  }

  getInfo(): Promise<GetInfoResponse> {
    // Add your own implementation.
  }

  getBalance(): Promise<GetBalanceResponse> {
    // Add your own implementation.
  }

  sendPayment(args: SendPaymentArgs): Promise<SendPaymentResponse> {
    // Add your own implementation.
  }

  checkPayment(args: CheckPaymentArgs): Promise<CheckPaymentResponse> {
    // Add your own implementation.
  }

  signMessage(args: SignMessageArgs): Promise<SignMessageResponse> {
    // Add your own implementation.
  }

  verifyMessage(args: VerifyMessageArgs): Promise<VerifyMessageResponse> {
    // Add your own implementation.
  }

  makeInvoice(args: MakeInvoiceArgs): Promise<MakeInvoiceResponse> {
    // Add your own implementation.
  }

  getInvoices(): Promise<GetInvoicesResponse> {
    // Add your own implementation.
  }

  getTransactions(): Promise<GetTransactionsResponse> {
    // Add your own implementation.
  }
}

export default ConnectorExample;
